language: rust

dist: xenial

cache:
  - cargo

rust:
  - stable
  - nightly

jobs:
  allow_failures:
  - rust: nightly

matrix:
  fast_finish: true

before_script:
  - rustup component add rustfmt
  - |
    if [ $TRAVIS_RUST_VERSION = "stable" -a $TRAVIS_PULL_REQUEST = "false" ]; then
      if [ ! -x "$(command -v cargo-install-update)" ]; then
        cargo install cargo-update
      fi
      if [ ! -x "$(command -v cargo-tarpaulin)" ]; then
        cargo install cargo-tarpaulin
      fi
      cargo install-update --all
    fi

script:
  - cargo fmt -- --check
  - cargo clean
  - cargo build
  - cargo test

after_success:
  - test $TRAVIS_BRANCH = "master" -a $TRAVIS_RUST_VERSION = "stable" -a $TRAVIS_PULL_REQUEST = "false" &&
    cargo doc &&
    echo '<html><head><meta http-equiv=refresh content=0;url=mpi_traffic/index.html /></head></html>' > target/doc/index.html
  - test $TRAVIS_RUST_VERSION = "stable" -a $TRAVIS_PULL_REQUEST = "false" &&
    cargo tarpaulin  --ciserver travis-ci --coveralls $TRAVIS_JOB_ID

deploy:
  provider: pages
  local-dir: target/doc
  skip-cleanup: true
  github-token: $GITHUB_TOKEN
  keep-history: false
  on:
    branch: master
    condition: $TRAVIS_RUST_VERSION = stable

addons:
  apt:
    update: true
    packages:
    # for mpi and libffi
    - libmpich-dev
    - texinfo
    # for tarpaulin
    - libssl-dev
    - pkg-config
    - cmake
    - zlib1g-dev
